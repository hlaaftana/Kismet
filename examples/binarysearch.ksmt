defn binary_search(a: List[Int], k: Int) {
  c: b: size a
  i: 0i32
  while [< i b] {
    mid: half [+ i b]
    or? [< cast(Int, a[mid]) k] (i: next mid) (b: mid)
  }
  echo [string "i: " i ", c: " c ", a[i]: " a[i] ", k: " k]
  unless [and cast(Boolean, < i c) cast(Boolean, is? cast(Int, a[i]) k)] i: -1i32
  i
}

assert_is 3 [binary_search [1, 2, 3, 4, 5, 6] 4]
assert_is -1 [binary_search [3, 5, 1, 4, 1] 1]