defn [fizzbuzz_imperative n] {
    x = ""
    for n {
        ;; if_then doesn't evaluate the condition in a child block, and has no elses
        if_then(d3 = divs? it 3, add x "Fizz")
        if_then(d5 = divs? it 5, add x "Buzz")
        unless_then(or d3 d5, add x (string it))
        if [isn't? it n] [add x "\n"]
    }
    x
}

defn [fizzbuzz_functional n] {
  |> [i 1 n] {
    &for [check i
      [divs 15] "FizzBuzz"
      [divs 3] "Fizz"
      [divs 5] "Buzz"
      i]
    join "\n"
  }
}

assert_is fizzbuzz_functional(100) fizzbuzz_imperative(100)