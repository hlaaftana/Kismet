block "functional" {
  defn [factorial n] [permutation n n]
  defn [permutation n r] [product [range [next [- n r]] n]]
  defn [combination n r] [div [permutation n r] [factorial r]]
}

block "imperative" {
  defn [factorial n] {
    := x 1
    for n [= x [* x it]]
    x
  }

  defn [permutation n r] {
    := x 1
    for [i [next [- n r]] n] {
      |>= x [* i]
    }
    x
  }

  defn [combination n r] [let [[result x] 1] [for< [i 0 r] [= x [/ [* x [- n i]] [- r i]]]]]
}